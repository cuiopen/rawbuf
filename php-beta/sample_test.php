<?php
////////////////////////////////////////////////////////////////////////////////
// NOTE : Generated by rawbuf. It is NOT supposed to modify this file.
////////////////////////////////////////////////////////////////////////////////
require_once "rawbuf.php";

function rb_create_sample_struct()
{
    return array(
        "int8_val" => 0,
        "id_int8_val" => 0,
        "skip_int8_val" => false,
        "rb_has_int8_val" => false,
        "uint8_val" => 0,
        "id_uint8_val" => 1,
        "skip_uint8_val" => false,
        "rb_has_uint8_val" => false,
        "str_val" => "",
        "id_str_val" => 100,
        "skip_str_val" => false,
        "rb_has_str_val" => false,
        "str_arr_val" => array(),
        "id_str_arr_val" => 2,
        "skip_str_arr_val" => false,
        "rb_has_str_arr_val" => false,
        "str_dict_val" => array(),
        "id_str_dict_val" => 3,
        "skip_str_dict_val" => false,
        "rb_has_str_dict_val" => false
    );
}

function rb_eq_sample_struct(&$src, &$dst)
{
    if ($src["int8_val"] != $dst["int8_val"])
    {
        return false;
    }
    if ($src["uint8_val"] != $dst["uint8_val"])
    {
        return false;
    }
    if ($src["str_val"] != $dst["str_val"])
    {
        return false;
    }
    if (!rb_eq_string_array($src["str_arr_val"], $dst["str_arr_val"]))
    {
        return false;
    }
    if (!rb_eq_string_dict($src["str_dict_val"], $dst["str_dict_val"]))
    {
        return false;
    }
    return true;
}

function rb_fields_sample_struct(&$obj_val)
{
    $fields = 0;
    if (!$obj_val["skip_int8_val"])
    {
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_uint8_val"])
    {
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_str_val"])
    {
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_str_arr_val"])
    {
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_str_dict_val"])
    {
        $fields = $fields + 1;
    }
    return $fields;
}

function rb_sizeof_sample_struct(&$obj_val)
{
    $fields = 0;
    $size = 0;
    if (!$obj_val["skip_int8_val"])
    {
        $size += rb_sizeof_int8($obj_val["int8_val"]);
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_uint8_val"])
    {
        $size += rb_sizeof_uint8($obj_val["uint8_val"]);
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_str_val"])
    {
        $size += rb_sizeof_string($obj_val["str_val"]);
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_str_arr_val"])
    {
        $size += rb_sizeof_string_array($obj_val["str_arr_val"]);
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_str_dict_val"])
    {
        $size += rb_sizeof_string_dict($obj_val["str_dict_val"]);
        $fields = $fields + 1;
    }
    $size += rb_seek_field_table_item($fields);
    $size += sizeof_rb_buf_end;
    return $size;
}

function rb_encode_sample_struct(&$obj_val, &$rb_val)
{
    $buf = rb_nested_buf($rb_val, 0);
    if ($buf["size"] < 1)
    {
        return false;
    }
    $fields = rb_fields_sample_struct($obj_val);
    $index = 0;
    if (!rb_set_field_count($fields, $buf))
    {
        return false;
    }
    if (!$obj_val["skip_int8_val"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_int8_val"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_int8($obj_val["int8_val"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }
    if (!$obj_val["skip_uint8_val"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_uint8_val"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_uint8($obj_val["uint8_val"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }
    if (!$obj_val["skip_str_val"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_str_val"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_string($obj_val["str_val"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }
    if (!$obj_val["skip_str_arr_val"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_str_arr_val"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_string_array($obj_val["str_arr_val"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }
    if (!$obj_val["skip_str_dict_val"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_str_dict_val"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_string_dict($obj_val["str_dict_val"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }

    if (!rb_set_buf_size($buf["pos"] - $buf["start"] + sizeof_rb_buf_end, $buf))
    {
        return false;
    }
    if (!rb_encode_end($fields, $buf))
    {
        return false;
    }
    $rb_val["pos"] = $buf["pos"];

    return true;
}

function __decode_sample_struct($id, $offset, &$rb_val, &$obj_val)
{
    if ($id == $obj_val["id_int8_val"])
    {
        list($obj_val["int8_val"], $rc) = rb_decode_int8($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_int8_val"] = true;
        }
        return $rc;
    }
    if ($id == $obj_val["id_uint8_val"])
    {
        list($obj_val["uint8_val"], $rc) = rb_decode_uint8($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_uint8_val"] = true;
        }
        return $rc;
    }
    if ($id == $obj_val["id_str_val"])
    {
        list($obj_val["str_val"], $rc) = rb_decode_string($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_str_val"] = true;
        }
        return $rc;
    }
    if ($id == $obj_val["id_str_arr_val"])
    {
        list($obj_val["str_arr_val"], $rc) = rb_decode_string_array($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_str_arr_val"] = true;
        }
        return $rc;
    }
    if ($id == $obj_val["id_str_dict_val"])
    {
        list($obj_val["str_dict_val"], $rc) = rb_decode_string_dict($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_str_dict_val"] = true;
        }
        return $rc;
    }
    return true;
}

function rb_decode_sample_struct(&$rb_val, $offset)
{
    $buf = rb_nested_buf($rb_val, $offset);
    if ($buf["size"] < 1)
    {
        return array(null, false);
    }
    list($size, $fields) = rb_get_field_table_head($buf);
    if ($fields < 1 || !rb_check_code($buf, $size, $fields))
    {
        return array(null, false);
    }
    $obj_val = rb_create_sample_struct();
    for ($i = 0; $i < $fields; $i++)
    {
        list($id, $off, $rc) = rb_get_field_table_item($i, $buf);
        if (!$rc)
        {
            return array(null, false);
        }
        if ($off >= $size)
        {
            return array(null, false);
        }
        if ($off > 0 && !__decode_sample_struct($id, $off, $buf, $obj_val))
        {
            return array(null, false);
        }
    }
    return array($obj_val, true);
}

function rb_dump_sample_struct(&$obj_val, $path)
{
    $size = rb_sizeof_sample_struct($obj_val);
    if ($size < 1)
    {
        return false;
    }
    return rb_dump_buf(rb_encode_sample_struct, $obj_val, $size, $path);
}

function rb_load_sample_struct($path)
{
    return rb_load_buf($path, rb_decode_sample_struct);
}

function rb_eq_sample_struct_array(&$src, &$dst)
{
    $ssize = count($src);
    $dsize = count($dst);
    if ($ssize != $dsize)
    {
        return false;
    }
    for ($i = 0; $i < $ssize; $i++)
    {
        if (!rb_eq_sample_struct($src[$i], $dst[$i]))
        {
            return false;
        }
    }
    return true;
}

function rb_sizeof_sample_struct_array(&$obj_val)
{
    $size = sizeof_rb_size + count($obj_val) * sizeof_rb_size;
    foreach($obj_val as $i => $item)
    {
        $size += rb_sizeof_sample_struct($item);
    }
    return $size;
}

function rb_encode_sample_struct_array(&$obj_val, &$rb_val)
{
    $buf = rb_nested_buf($rb_val, 0);
    if ($buf["size"] < 1)
    {
        return false;
    }
    $count = count($obj_val);
    if (!rb_set_array_count($count, $buf))
    {
        return false;
    }
    foreach($obj_val as $i => $item)
    {
        if (!rb_set_array_table_item($i, $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_sample_struct($item, $buf))
        {
            return false;
        }
    }
    $rb_val["pos"] = $buf["pos"];
    return true;
}

function rb_decode_sample_struct_array(&$rb_val, $offset)
{
    $obj_val = array();
    $buf = rb_nested_buf($rb_val, $offset);
    if ($buf["size"] < 1)
    {
        return array(null, false);
    }
    $size = rb_get_array_count($buf);
    if ($size < 1)
    {
        return array($obj_val, true);
    }
    $rc = true;
    for ($i = 0; $i < $size; $i++)
    {
        list($off, $ok) = rb_get_array_table_item($i, $buf);
        if (!$ok)
        {
            $rc = false;
            break;
        }
        list($val, $ok) = rb_decode_sample_struct($buf, $off);
        if (!ok)
        {
            $rc = false;
            break;
        }
        array_push($obj_val, $val);
    }
    return array($obj_val, $rc);
}

function rb_eq_sample_struct_dict(&$src, &$dst)
{
    $ssize = count($src);
    $dsize = count($dst);
    if ($ssize != $dsize)
    {
        return false;
    }
    foreach($src as $key => $item)
    {
        if (!isset($dst[$key]))
        {
            return false;
        }
        if (!rb_eq_sample_struct($item, $dst[$key]))
        {
            return false;
        }
    }
    return true;
}

function rb_sizeof_sample_struct_dict(&$obj_val)
{
    $size = sizeof_rb_size + count($obj_val) * sizeof_rb_size;
    foreach($obj_val as $key => $item)
    {
        $size += rb_sizeof_string($key);
        $size += rb_sizeof_sample_struct($item);
    }
    return $size;
}

function rb_encode_sample_struct_dict(&$obj_val, &$rb_val)
{
    $buf = rb_nested_buf($rb_val, 0);
    if ($buf["size"] < 1)
    {
        return false;
    }
    $count = count($obj_val);
    if (!rb_set_array_count($count, $buf))
    {
        return false;
    }
    $i = 0;
    foreach($obj_val as $key => $item)
    {
        if (!rb_set_array_table_item($i, $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_string($key, $buf))
        {
            return false;
        }
        if (!rb_encode_sample_struct($item, $buf))
        {
            return false;
        }
        $i = $i + 1;
    }
    $rb_val["pos"] = $buf["pos"];
    return true;
}

function rb_decode_sample_struct_dict(&$rb_val, $offset)
{
    $obj_val = array();
    $buf = rb_nested_buf($rb_val, $offset);
    if ($buf["size"] < 1)
    {
        return array(null, false);
    }
    $size = rb_get_array_count($buf);
    if ($size < 1)
    {
        return array($obj_val, true);
    }
    $rc = true;
    for ($i = 0; $i < $size; $i++)
    {
        list($off, $ok) = rb_get_array_table_item($i, $buf);
        if (!$ok)
        {
            $rc = false;
            break;
        }
        list($key, $ok) = rb_decode_string($buf, $off);
        if (!$ok)
        {
            $rc = false;
            break;
        }
        $delta = rb_sizeof_string($key);
        list($val, $ok) = rb_decode_sample_struct($buf, $off + $delta);
        if (!$ok)
        {
            $rc = false;
            break;
        }
        $obj_val[$key] = $val;
    }
    return array($obj_val, $rc);
}

function rb_create_sample_object()
{
    return array(
        "obj" => rb_create_sample_struct(),
        "id_obj" => 0,
        "skip_obj" => false,
        "rb_has_obj" => false,
        "arr" => array(),
        "id_arr" => 1,
        "skip_arr" => false,
        "rb_has_arr" => false,
        "dict" => array(),
        "id_dict" => 2,
        "skip_dict" => false,
        "rb_has_dict" => false
    );
}

function rb_eq_sample_object(&$src, &$dst)
{
    if (!rb_eq_sample_struct($src["obj"], $dst["obj"]))
    {
        return false;
    }
    if (!rb_eq_sample_struct_array($src["arr"], $dst["arr"]))
    {
        return false;
    }
    if (!rb_eq_sample_struct_dict($src["dict"], $dst["dict"]))
    {
        return false;
    }
    return true;
}

function rb_fields_sample_object(&$obj_val)
{
    $fields = 0;
    if (!$obj_val["skip_obj"])
    {
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_arr"])
    {
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_dict"])
    {
        $fields = $fields + 1;
    }
    return $fields;
}

function rb_sizeof_sample_object(&$obj_val)
{
    $fields = 0;
    $size = 0;
    if (!$obj_val["skip_obj"])
    {
        $size += rb_sizeof_sample_struct($obj_val["obj"]);
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_arr"])
    {
        $size += rb_sizeof_sample_struct_array($obj_val["arr"]);
        $fields = $fields + 1;
    }
    if (!$obj_val["skip_dict"])
    {
        $size += rb_sizeof_sample_struct_dict($obj_val["dict"]);
        $fields = $fields + 1;
    }
    $size += rb_seek_field_table_item($fields);
    $size += sizeof_rb_buf_end;
    return $size;
}

function rb_encode_sample_object(&$obj_val, &$rb_val)
{
    $buf = rb_nested_buf($rb_val, 0);
    if ($buf["size"] < 1)
    {
        return false;
    }
    $fields = rb_fields_sample_object($obj_val);
    $index = 0;
    if (!rb_set_field_count($fields, $buf))
    {
        return false;
    }
    if (!$obj_val["skip_obj"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_obj"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_sample_struct($obj_val["obj"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }
    if (!$obj_val["skip_arr"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_arr"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_sample_struct_array($obj_val["arr"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }
    if (!$obj_val["skip_dict"])
    {
        if (!rb_set_field_table_item($index, $obj_val["id_dict"], $buf["pos"] - $buf["start"], $buf))
        {
            return false;
        }
        if (!rb_encode_sample_struct_dict($obj_val["dict"], $buf))
        {
            return false;
        }
        $index = $index + 1;
    }

    if (!rb_set_buf_size($buf["pos"] - $buf["start"] + sizeof_rb_buf_end, $buf))
    {
        return false;
    }
    if (!rb_encode_end($fields, $buf))
    {
        return false;
    }
    $rb_val["pos"] = $buf["pos"];

    return true;
}

function __decode_sample_object($id, $offset, &$rb_val, &$obj_val)
{
    if ($id == $obj_val["id_obj"])
    {
        list($obj_val["obj"], $rc) = rb_decode_sample_struct($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_obj"] = true;
        }
        return $rc;
    }
    if ($id == $obj_val["id_arr"])
    {
        list($obj_val["arr"], $rc) = rb_decode_sample_struct_array($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_arr"] = true;
        }
        return $rc;
    }
    if ($id == $obj_val["id_dict"])
    {
        list($obj_val["dict"], $rc) = rb_decode_sample_struct_dict($rb_val, $offset);
        if ($rc) 
        {
            $obj_val["rb_has_dict"] = true;
        }
        return $rc;
    }
    return true;
}

function rb_decode_sample_object(&$rb_val, $offset)
{
    $buf = rb_nested_buf($rb_val, $offset);
    if ($buf["size"] < 1)
    {
        return array(null, false);
    }
    list($size, $fields) = rb_get_field_table_head($buf);
    if ($fields < 1 || !rb_check_code($buf, $size, $fields))
    {
        return array(null, false);
    }
    $obj_val = rb_create_sample_object();
    for ($i = 0; $i < $fields; $i++)
    {
        list($id, $off, $rc) = rb_get_field_table_item($i, $buf);
        if (!$rc)
        {
            return array(null, false);
        }
        if ($off >= $size)
        {
            return array(null, false);
        }
        if ($off > 0 && !__decode_sample_object($id, $off, $buf, $obj_val))
        {
            return array(null, false);
        }
    }
    return array($obj_val, true);
}

function rb_dump_sample_object(&$obj_val, $path)
{
    $size = rb_sizeof_sample_object($obj_val);
    if ($size < 1)
    {
        return false;
    }
    return rb_dump_buf(rb_encode_sample_object, $obj_val, $size, $path);
}

function rb_load_sample_object($path)
{
    return rb_load_buf($path, rb_decode_sample_object);
}

?>